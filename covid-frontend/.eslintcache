[{"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\index.js":"1","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\store.js":"3","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\App.js":"4","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reducers\\cartReducers.js":"5","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reducers\\orderReducers.js":"6","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reducers\\productReducers.js":"7","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reducers\\userReducers.js":"8","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Header.js":"9","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Footer.js":"10","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\HomeScreen.js":"11","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\CartScreen.js":"12","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ProductScreen.js":"13","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\PaymentScreen.js":"14","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ProfileScreen.js":"15","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ProductListScreen.js":"16","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\UserListScreen.js":"17","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ShippingScreen.js":"18","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\FAQScreen.js":"19","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\UserEditScreen.js":"20","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\OrderListScreen.js":"21","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\PlaceOrderScreen.js":"22","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\RegisterScreen.js":"23","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\LoginScreen.js":"24","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ProductEditScreen.js":"25","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\OrderScreen.js":"26","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\FormContainer.js":"27","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Message.js":"28","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Loader.js":"29","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Product.js":"30","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Rating.js":"31","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\CheckoutSteps.js":"32","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\constants\\userConstants.js":"33","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\constants\\cartConstants.js":"34","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\constants\\productConstants.js":"35","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\constants\\orderConstants.js":"36","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\actions\\userActions.js":"37","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\actions\\productActions.js":"38","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\actions\\orderActions.js":"39","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\actions\\cartActions.js":"40"},{"size":615,"mtime":1608512288620,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1608512288620,"results":"43","hashOfConfig":"42"},{"size":2131,"mtime":1609104981237,"results":"44","hashOfConfig":"42"},{"size":2864,"mtime":1609103230092,"results":"45","hashOfConfig":"42"},{"size":1415,"mtime":1609103230098,"results":"46","hashOfConfig":"42"},{"size":3351,"mtime":1609104981236,"results":"47","hashOfConfig":"42"},{"size":2896,"mtime":1609103230099,"results":"48","hashOfConfig":"42"},{"size":3873,"mtime":1609103230099,"results":"49","hashOfConfig":"42"},{"size":2971,"mtime":1609105473532,"results":"50","hashOfConfig":"42"},{"size":557,"mtime":1609105519611,"results":"51","hashOfConfig":"42"},{"size":1072,"mtime":1609103230100,"results":"52","hashOfConfig":"42"},{"size":4094,"mtime":1608512288620,"results":"53","hashOfConfig":"42"},{"size":4555,"mtime":1608512288620,"results":"54","hashOfConfig":"42"},{"size":1870,"mtime":1609103230101,"results":"55","hashOfConfig":"42"},{"size":3825,"mtime":1609103230102,"results":"56","hashOfConfig":"42"},{"size":4067,"mtime":1609103230102,"results":"57","hashOfConfig":"42"},{"size":3334,"mtime":1609103230103,"results":"58","hashOfConfig":"42"},{"size":2715,"mtime":1609120293152,"results":"59","hashOfConfig":"42"},{"size":1985,"mtime":1609103230099,"results":"60","hashOfConfig":"42"},{"size":3292,"mtime":1609120323864,"results":"61","hashOfConfig":"42"},{"size":3394,"mtime":1609103230100,"results":"62","hashOfConfig":"42"},{"size":7421,"mtime":1609103230101,"results":"63","hashOfConfig":"42"},{"size":3367,"mtime":1609120086179,"results":"64","hashOfConfig":"42"},{"size":2312,"mtime":1609119759035,"results":"65","hashOfConfig":"42"},{"size":6145,"mtime":1609118176239,"results":"66","hashOfConfig":"42"},{"size":7549,"mtime":1609118176238,"results":"67","hashOfConfig":"42"},{"size":425,"mtime":1609103230096,"results":"68","hashOfConfig":"42"},{"size":296,"mtime":1608512288612,"results":"69","hashOfConfig":"42"},{"size":365,"mtime":1608512288612,"results":"70","hashOfConfig":"42"},{"size":945,"mtime":1609103230097,"results":"71","hashOfConfig":"42"},{"size":2275,"mtime":1608512288612,"results":"72","hashOfConfig":"42"},{"size":1441,"mtime":1609103230095,"results":"73","hashOfConfig":"42"},{"size":1505,"mtime":1609103230098,"results":"74","hashOfConfig":"42"},{"size":284,"mtime":1609103230097,"results":"75","hashOfConfig":"42"},{"size":1545,"mtime":1609103230097,"results":"76","hashOfConfig":"42"},{"size":1210,"mtime":1609104981236,"results":"77","hashOfConfig":"42"},{"size":6880,"mtime":1609103230093,"results":"78","hashOfConfig":"42"},{"size":4141,"mtime":1609103230093,"results":"79","hashOfConfig":"42"},{"size":4528,"mtime":1609104981234,"results":"80","hashOfConfig":"42"},{"size":1387,"mtime":1609103230092,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1m3x36n",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\index.js",[],["168","169"],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\store.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\App.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Header.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Footer.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\FAQScreen.js",["170"],"import React from 'react'\r\nimport { Accordion, Button, Card } from 'react-bootstrap'\r\n\r\nconst tabs = [\r\n    { id: 1, label: \"Tab 1\", description: \"Content of Tab 1\" },\r\n    { id: 2, label: \"Tab 2\", description: \"Content of Tab 2\" },\r\n    { id: 3, label: \"Tab 3\", description: \"Content of Tab 3\" }\r\n  ];\r\n\r\nconst FAQScreen = () => {\r\n    return (\r\n        <>\r\n<Accordion>\r\n    <h1>Frequently Asked Questions</h1>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n        Is there free shipping offered?\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>Yes! Any order over $75 is shipped for free. Anyone who is subscribed\r\n          to a supply box package also receives free shipping.\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n        Do you ship outside of Canada?\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>At the moment Covid Supply Co. only ships within Canada</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n        What Payment Methods Do You Support?\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"2\">\r\n      <Card.Body>We can process PayPal payments as well as credit card payments handled by Shopify</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n        What is your return policy?\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"3\">\r\n      <Card.Body>Only items that are damaged upon arrival are accepted for a return</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FAQScreen\r\n","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\PlaceOrderScreen.js",["171","172"],"import React, { useState, useEffect } from 'react'\r\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2)\r\n    }\r\n    //calculate the prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    \r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 75 ? 0 : 12)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) + Number(cart.shippingPrice) +Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error} = orderCreate\r\n\r\n    useEffect(()=>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler =() => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step4 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2> Shipping </h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city} \r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your Cart is empty</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index)=>(\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name}\r\n                                                    fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={5}>\r\n                                                    {item.qty} x ${item.price}: <strong>${item.qty * item.price} </strong>\r\n                                                </Col>\r\n                                                </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                                )}\r\n                                        </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                            <Col md={4}>\r\n                                <Card>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2>Order Summary</h2>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                    <Col>Items</Col>\r\n                                                        <Col>${cart.itemsPrice}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                            <Col>Shipping</Col>\r\n                                                <Col>${cart.shippingPrice}</Col>\r\n                                            </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                            <Row>\r\n                                                                    <Col>Tax</Col>\r\n                                                                    <Col>${cart.taxPrice}</Col>\r\n                                            </Row>\r\n                                                            </ListGroup.Item>\r\n                                                            <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>Total</Col>\r\n                                                                    <Col>${cart.totalPrice}</Col>\r\n                                                               </Row>\r\n                                                            </ListGroup.Item>\r\n                                                            <ListGroup.Item>\r\n                                                                {error && <Message variant='danger'>{error}</Message>}\r\n                                                            </ListGroup.Item>\r\n                                                            <ListGroup.Item>\r\n                                                                <Button type='button' className='btn-block' \r\n                                                                disabled={cart.cartItems ===0}\r\n                                                                onClick={placeOrderHandler}\r\n                                                                >Place Order</Button>\r\n                                                            </ListGroup.Item>\r\n                                                        </ListGroup>\r\n                                                    </Card>\r\n                                                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\screens\\OrderScreen.js",["173"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Message.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Loader.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Product.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\Rating.js",["174","175"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color: color}} \r\n                className={\r\n                    value >= 1\r\n                    ? 'fas fa-star' \r\n                    : value >= 0.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                }                    \r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}}\r\n                className={\r\n                    value >= 2\r\n                    ? 'fas fa-star' \r\n                    : value >= 1.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                }                    \r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}} \r\n                className={\r\n                    value >= 3\r\n                    ? 'fas fa-star' \r\n                    : value >= 2.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                }                    \r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}}\r\n                className={\r\n                    value >= 4\r\n                    ? 'fas fa-star' \r\n                    : value >= 3.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                }                    \r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}}\r\n                className={\r\n                    value >= 5\r\n                    ? 'fas fa-star' \r\n                    : value >= 4.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                }                    \r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps ={\r\n    color: '#f8e825',\r\n}\r\n\r\nRating.propTypes ={\r\n    value: PropTypes.number.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    value: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\actions\\userActions.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\actions\\productActions.js",[],"C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\actions\\orderActions.js",["176"],"\r\nimport axios from 'axios'\r\nimport {\r\n\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL\r\n\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_DELIVER_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/orders/${order._id}/deliver`,\r\n        {},\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: ORDER_DELIVER_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_DELIVER_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\nicks\\webcentricproject\\covid-frontend\\src\\actions\\cartActions.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":4,"column":7,"nodeType":"183","messageId":"184","endLine":4,"endColumn":11},{"ruleId":"181","severity":1,"message":"185","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":49,"column":46,"nodeType":"188","endLine":49,"endColumn":51},{"ruleId":"189","severity":1,"message":"190","line":77,"column":6,"nodeType":"191","endLine":77,"endColumn":60,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":74,"column":5,"nodeType":"195","messageId":"196","endLine":74,"endColumn":10},{"ruleId":"193","severity":1,"message":"194","line":75,"column":5,"nodeType":"195","messageId":"196","endLine":75,"endColumn":10},{"ruleId":"181","severity":1,"message":"197","line":157,"column":15,"nodeType":"183","messageId":"184","endLine":157,"endColumn":21},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'tabs' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["200"],"no-dupe-keys","Duplicate key 'value'.","ObjectExpression","unexpected","'config' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"203","text":"204"},[2389,2443],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]"]